<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fn:join</title><link>https://fnjoin.com/</link><description>Recent content on fn:join</description><generator>Hugo -- gohugo.io</generator><managingEditor>contact@fnjoin.com (Salman Malik, Archie Cowan)</managingEditor><webMaster>contact@fnjoin.com (Salman Malik, Archie Cowan)</webMaster><lastBuildDate>Sat, 10 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://fnjoin.com/index.xml" rel="self" type="application/rss+xml"/><item><title>CDK Template to Launch an EC2 Instance with an Encrypted Root Volume</title><link>https://fnjoin.com/post/2022-12-10-cdk-ec2-encrypted-root-disk-dev/</link><pubDate>Sat, 10 Dec 2022 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2022-12-10-cdk-ec2-encrypted-root-disk-dev/</guid><description>A teammate recently drew my attention to the benefits of Remote Development using SSH, a plugin for VS Code. It provides a local experience for developing remotely. I&amp;rsquo;ve done remote development with terminals and SSH and my favorite editor for a long time. However, the combination of a full IDE experienece along with the decent terminal experience available in VS Code motivated me to give it a try. In this article, we&amp;rsquo;ll create a remote development environment with AWS CDK.</description></item><item><title>Kubernetes Controller Pattern Example with Java and MySQL</title><link>https://fnjoin.com/post/2022-11-08-k8s-controller-java/</link><pubDate>Tue, 08 Nov 2022 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2022-11-08-k8s-controller-java/</guid><description>This post is a continuation of Kubernetes with Java - Handling Events which showed us how to subscribe to API events for a given type of Kubernetes resource and deal with them in near real-time. In this post, we will learn how to use that capability along side other client machinery components to write a Kubernetes controller.
What are we trying to do For this post, our goal is to make it easier to create multiple MySQL database instances in a Kubernetes cluster.</description></item><item><title>10x Faster Spring Boot Startup Times</title><link>https://fnjoin.com/post/2022-03-20-fast-java-startup/</link><pubDate>Sun, 20 Mar 2022 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2022-03-20-fast-java-startup/</guid><description>Applications based on spring-boot are not known for extremely fast startup times and low memory usage. Usually spring-boot application are meant for long running backend processes and we have learned to live with the startup time and higher memory usage. This is because leveraging spring-boot solves so many other problems for the developer and speeds up the overall development process. In other words, we are OK with more developer productivity at the cost of higher resource usage at runtime specially at application startup.</description></item><item><title>k9s - My Favorite Kubernetes Tool</title><link>https://fnjoin.com/post/2022-02-07-fav-k8s-cli-tool/</link><pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2022-02-07-fav-k8s-cli-tool/</guid><description>If you work with Kubernetes clusters a lot, you are most probably used to typing a lot of kubectl commands. A while ago, I discovered k9s and it made working with Kubernetes clusters so much simpler. To quote the description directly from the k9s site:
K9s is a terminal based UI to interact with your Kubernetes clusters
Installing k9s is written in go-lang. The beauty of programs written in that language is that they are compiled down to a single binary with all the dependencies included.</description></item><item><title>Kubernetes with Java - Handling Events</title><link>https://fnjoin.com/post/2022-01-03-k8s-event-handling/</link><pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2022-01-03-k8s-event-handling/</guid><description>This post is a continuation of Kubernetes with Java - Asynchronous APIs which showed us how to interact with the Kubernetes API to list deployment resources on demand. In this post, we will learn how to handle Kubernetes API events in near real-time.
An example use case for this capability might be to send a notification to a slack channel whenever an app deployment is started or when it finishes and becomes ready to be consumed.</description></item><item><title>Config Updates Without Redeployment for Spring and Kubernetes</title><link>https://fnjoin.com/post/2021-12-18-live-config-updates-spring-configmaps/</link><pubDate>Sat, 18 Dec 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-12-18-live-config-updates-spring-configmaps/</guid><description>Here&amp;rsquo;s what you&amp;rsquo;ll accomplish by the end of this article:
Create a small Spring Boot application that loads a property file from a configurable location overriding configuration that is packaged with the application. Package the application in a docker image and see how to override the config file via docker commands. Deploy the application to kubernetes. Use a Kubernetes Configmap to update your configuration without redeployment of your application. Learn about when using these methods together is recommended.</description></item><item><title>Accelerate Your Deployment Velocity with Feature flags</title><link>https://fnjoin.com/post/2021-12-04-accelerate-with-feature-flags/</link><pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-12-04-accelerate-with-feature-flags/</guid><description>Make Small Iterative Changes We wrote in How Many Deployments Amazon Does in a Day that your team is likely capable of deploying a million times in about 10 years with a little more than 55 engineers by making 2-3 changes per week per engineer to production. When you make that many changes per week, those changes likely aren&amp;rsquo;t complete features. Complete features may have hundreds of small iterative changes of that size with contributions from many people.</description></item><item><title>Kubernetes with Java - Creating Images</title><link>https://fnjoin.com/post/2021-11-28-creating-images/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-11-28-creating-images/</guid><description>Building production quality images for Java apps To run a spring-boot app on k8s, you need to create a container image. The images need to be in the Open Container Image format. In this article, we will review how to create OCI images two different ways:
Using a Dockerfile Using Cloud Native Buildpacks Note: The Open Container Image (OCI) format antecedent of the Docker image format as a standard specification.</description></item><item><title>You Can Match How Many Deployments Amazon Does in a Day</title><link>https://fnjoin.com/post/2021-11-28-how-many-deployments-amazon-does-in-a-day/</link><pubDate>Sun, 28 Nov 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-11-28-how-many-deployments-amazon-does-in-a-day/</guid><description>Wonder how many deployments Amazon does in a day? In November 2014, Dr. Werner Vogels reported that Amazon achieves 50M deployments a year across their dev, test, and production environments. That&amp;rsquo;s 136k deployments per day or about 1.6 per second. His article describes the systems they created to automate deployment across their infrastructure. That is only one aspect of reaching that astronomical position. You also need a lot of engineers to reach that level of productivity.</description></item><item><title>Kubernetes with Java - Running in the Cluster</title><link>https://fnjoin.com/post/2021-09-11-running-in-cluster/</link><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-09-11-running-in-cluster/</guid><description>What are we going to do? This post builds on top of Kubernetes with Java - Introduction and Kubernetes with Java - Asynchronous APIs posts which showed us how to interact with the Kubernetes API to list deployment resources and provide an API of our own to list teams and apps belonging to those teams running in the cluster. In this post, we will
Configure a spring-boot app to be able to access the Kubernetes API when running inside a Kubernetes cluster Learn how to package up a spring-boot app into an OCI image (aka Docker image) Configure RBAC with Role, RoleBinding, and ServiceAccount so our spring-boot app has the ability to run with only the Kubernetes APIs that we think it should have access to and nothing more Create Deployment and Service resources to deploy our spring-boot app and expose its API within the cluster Prerequisites Access to source code for the project - https://github.</description></item><item><title>Kubernetes with Java - Asynchronous APIs</title><link>https://fnjoin.com/post/2021-09-08-show-deployments-async/</link><pubDate>Wed, 08 Sep 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-09-08-show-deployments-async/</guid><description>What are we going to do? This post builds on top of Kubernetes with Java - Introduction which relied on synchronous Kubernetes API to get information for apps runnings in Kubernetes cluster. In this post, we will
Learn when to use synchronous and when to use asynchronous Kubernetes API mechanisms Learn how to use asynchronous Kubernetes API to exrtact deployments metadata How to use spring-boot profiles to conditionally enable functionality Synchronous vs asynchronous APIs Kubernetes API provides two mechanisms to consume information for the clients.</description></item><item><title>Kubernetes with Java - Introduction</title><link>https://fnjoin.com/post/2021-08-27-show-deployments/</link><pubDate>Fri, 27 Aug 2021 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/post/2021-08-27-show-deployments/</guid><description>What are we going to do? Learn how to initialize the k8s api client in a java spring-boot application Extract metadata from deployments in a namespace and transform that metadata into new views Prepare you for more sophisticated problem solving using the k8s API in future articles Motivation You have a few dozen different applications (as Kubernetes deployment resources) running in your cluster All of those applications use labels to designate the name of the team that manages that application, and the application name You want to provide APIs that: Lists all teams that have applications running in the cluster Lists all apps that belong to a team Scenario Assumption: you have minikube locally and you don&amp;rsquo;t already have a namespace called dev.</description></item><item><title>About us</title><link>https://fnjoin.com/page/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>contact@fnjoin.com (Salman Malik, Archie Cowan)</author><guid>https://fnjoin.com/page/about/</guid><description>We have deployed applications to the cloud hundreds of thousands of times for small and large organizations alike. The systems we have created are on a trajectory to reach 1 million deployments to the cloud. We want to help you create systems that will also achieve 1 million deployments to the cloud.
Setting your organization on a path to reach 1 million cloud deployments is achievable through automation, engineering practices, and organizational culture.</description></item></channel></rss>